package repo

import (
	"context"
	"fmt"
	"gorm.io/gorm"
)

// Code generated by gormt. DO NOT EDIT.

type _StaffGroupProjectMgr struct {
	*_BaseMgr
}

// StaffGroupProjectMgr open func
func StaffGroupProjectMgr(db *gorm.DB) *_StaffGroupProjectMgr {
	if db == nil {
		panic(fmt.Errorf("StaffGroupProjectMgr need init by db"))
	}
	ctx, cancel := context.WithCancel(context.Background())
	return &_StaffGroupProjectMgr{_BaseMgr: &_BaseMgr{DB: db.Table("staff_group_project"), isRelated: globalIsRelated, ctx: ctx, cancel: cancel, timeout: -1}}
}

// WithContext set context to db
func (obj *_StaffGroupProjectMgr) WithContext(c context.Context) *_StaffGroupProjectMgr {
	if c != nil {
		obj.ctx = c
	}
	return obj
}

func (obj *_StaffGroupProjectMgr) WithSelects(idName string, selects ...string) *_StaffGroupProjectMgr {
	if len(selects) > 0 {
		if len(idName) > 0 {
			selects = append(selects, idName)
		}
		// 对Select进行去重
		selectMap := make(map[string]int, len(selects))
		for _, e := range selects {
			if _, ok := selectMap[e]; !ok {
				selectMap[e] = 1
			}
		}

		newSelects := make([]string, 0, len(selects))
		for k := range selectMap {
			if len(k) > 0 {
				newSelects = append(newSelects, k)
			}
		}
		obj.DB = obj.DB.Select(newSelects)
	}
	return obj
}

func (obj *_StaffGroupProjectMgr) WithOmit(omit ...string) *_StaffGroupProjectMgr {
	if len(omit) > 0 {
		obj.DB = obj.DB.Omit(omit...)
	}
	return obj
}

func (obj *_StaffGroupProjectMgr) WithOptions(opts ...Option) *_StaffGroupProjectMgr {
	options := options{
		query: make(map[string]interface{}, len(opts)),
	}
	for _, o := range opts {
		o.apply(&options)
	}
	obj.DB = obj.DB.Where(options.query)
	return obj
}

// GetTableName get sql table name.获取数据库名字
func (obj *_StaffGroupProjectMgr) GetTableName() string {
	return "staff_group_project"
}

// Reset 重置gorm会话
func (obj *_StaffGroupProjectMgr) Reset() *_StaffGroupProjectMgr {
	obj.new()
	return obj
}

// Get 获取
func (obj *_StaffGroupProjectMgr) Get() (result StaffGroupProject, err error) {
	err = obj.DB.WithContext(obj.ctx).Model(StaffGroupProject{}).Find(&result).Error

	return
}

// Gets 获取批量结果
func (obj *_StaffGroupProjectMgr) Gets() (results []*StaffGroupProject, err error) {
	err = obj.DB.WithContext(obj.ctx).Model(StaffGroupProject{}).Find(&results).Error

	return
}

func (obj *_StaffGroupProjectMgr) Count(count *int64) (tx *gorm.DB) {
	return obj.DB.WithContext(obj.ctx).Model(StaffGroupProject{}).Count(count)
}

// WithID id获取
func (obj *_StaffGroupProjectMgr) WithID(id int) Option {
	return optionFunc(func(o *options) { o.query["id"] = id })
}

// WithStaffGroupID staff_group_id获取
func (obj *_StaffGroupProjectMgr) WithStaffGroupID(staffGroupID int) Option {
	return optionFunc(func(o *options) { o.query["staff_group_id"] = staffGroupID })
}

// WithProjectID project_id获取
func (obj *_StaffGroupProjectMgr) WithProjectID(projectID int) Option {
	return optionFunc(func(o *options) { o.query["project_id"] = projectID })
}

// GetFromID 通过id获取内容
func (obj *_StaffGroupProjectMgr) GetFromID(id int) (result StaffGroupProject, err error) {
	err = obj.DB.WithContext(obj.ctx).Model(StaffGroupProject{}).Where("`id` = ?", id).Find(&result).Error

	return
}

// GetBatchFromID 批量查找
func (obj *_StaffGroupProjectMgr) GetBatchFromID(ids []int) (results []*StaffGroupProject, err error) {
	err = obj.DB.WithContext(obj.ctx).Model(StaffGroupProject{}).Where("`id` IN (?)", ids).Find(&results).Error

	return
}

// GetFromStaffGroupID 通过staff_group_id获取内容
func (obj *_StaffGroupProjectMgr) GetFromStaffGroupID(staffGroupID int) (results []*StaffGroupProject, err error) {
	err = obj.DB.WithContext(obj.ctx).Model(StaffGroupProject{}).Where("`staff_group_id` = ?", staffGroupID).Find(&results).Error

	return
}

// GetBatchFromStaffGroupID 批量查找
func (obj *_StaffGroupProjectMgr) GetBatchFromStaffGroupID(staffGroupIDs []int) (results []*StaffGroupProject, err error) {
	err = obj.DB.WithContext(obj.ctx).Model(StaffGroupProject{}).Where("`staff_group_id` IN (?)", staffGroupIDs).Find(&results).Error

	return
}

// GetFromProjectID 通过project_id获取内容
func (obj *_StaffGroupProjectMgr) GetFromProjectID(projectID int) (results []*StaffGroupProject, err error) {
	err = obj.DB.WithContext(obj.ctx).Model(StaffGroupProject{}).Where("`project_id` = ?", projectID).Find(&results).Error

	return
}

// GetBatchFromProjectID 批量查找
func (obj *_StaffGroupProjectMgr) GetBatchFromProjectID(projectIDs []int) (results []*StaffGroupProject, err error) {
	err = obj.DB.WithContext(obj.ctx).Model(StaffGroupProject{}).Where("`project_id` IN (?)", projectIDs).Find(&results).Error

	return
}

func (obj *_StaffGroupProjectMgr) CreateStaffGroupProject(bean *StaffGroupProject) (err error) {
	err = obj.DB.WithContext(obj.ctx).Model(StaffGroupProject{}).Create(bean).Error

	return
}

func (obj *_StaffGroupProjectMgr) UpdateStaffGroupProject(bean *StaffGroupProject) (err error) {
	err = obj.DB.WithContext(obj.ctx).Model(bean).Updates(bean).Error

	return
}

func (obj *_StaffGroupProjectMgr) DeleteStaffGroupProject(bean *StaffGroupProject) (err error) {
	err = obj.DB.WithContext(obj.ctx).Model(StaffGroupProject{}).Delete(bean).Error

	return
}
